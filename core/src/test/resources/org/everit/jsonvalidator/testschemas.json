{
  "patternProperties": {
    "patternProperties": {
      "a*": {
        "type": "integer"
      },
      "aaa*": {
        "maximum": 20
      }
    }
  },
  "objectWithSchemaDep": {
    "type": "object",
    "dependencies": {
      "a": {
        "type": "object",
        "properties": {
          "b": {
            "type": "string"
          }
        }
      }
    }
  },
  "stringSchema": {
    "type": "string",
    "minLength": 2,
    "maxLength": 3
  },
  "invalidStringSchema": {
    "type": "string",
    "minLength": "asd"
  },
  "stringSchemaWithFormat": {
    "type": "string",
    "format": "email"
  },
  "customFormat": {
    "format": "custom"
  },
  "unknown": {
    "type": "unknown"
  },
  "tupleSchema": {
    "type": "array",
    "additionalItems": false,
    "items": [
      {
        "type": "boolean"
      },
      {
        "type": "null"
      }
    ]
  },
  "listWithNoAdditionalItems": {
    "type": "array",
    "additionalItems": false,
    "items": {
      "type": "boolean"
    }
  },
  "booleanSchema": {
    "type": "boolean"
  },
  "nullSchema": {
    "type": "null"
  },
  "integerSchema": {
    "type": "integer",
    "minimum": 10,
    "maximum": 20,
    "exclusiveMinimum": true,
    "exclusiveMaximum": true,
    "multipleOf": 5
  },
  "invalidIntegerSchema": {
    "type": "integer",
    "minimum": "2",
    "maximum": 3
  },
  "invalidExclusiveMinimum": {
    "type": "integer",
    "exclusiveMinimum": "false"
  },
  "conditionalSchemaIf": {
    "if": {
      "exclusiveMinimum": 0
    }
  },
  "conditionalSchemaThen": {
    "then": {
      "maximum": 10
    }
  },
  "conditionalSchemaElse": {
    "else": {
      "multipleOf": 2
    }
  },
  "conditionalSchemaIfThenElse": {
    "if": {
      "exclusiveMinimum": 0
    },
    "then": {
      "maximum": 10
    },
    "else": {
      "multipleOf": 2
    }
  },
  "conditionalSchemaIfSubSchemaTrue": {
    "if": true
  },
  "objectWithSchemaRectangleDep": {
    "type": "object",
    "dependencies": {
      "d": {
        "type": "object",
        "properties": {
          "rectangle": {
            "$ref": "#/definitions/Rectangle"
          }
        }
      }
    },
    "definitions": {
      "size": {
        "type": "number",
        "minimum": 0
      },
      "Rectangle": {
        "type": "object",
        "properties": {
          "a": {
            "$ref": "#/definitions/size"
          },
          "b": {
            "$ref": "#/definitions/size"
          }
        }
      }
    }
  },
  "invalidDependency": {
    "type": "object",
    "dependencies": {
      "a": "b"
    }
  },
  "notSchema": {
    "not": {
      "type": "string"
    }
  },
  "pointerResolution": {
    "type": "object",
    "properties": {
      "rectangle": {
        "$ref": "#/definitions/Rectangle"
      },
      "boolRef": {
        "$ref": "#/definitions/bool"
      }
    },
    "definitions": {
      "size": {
        "type": "number",
        "minimum": 0
      },
      "Rectangle": {
        "type": "object",
        "properties": {
          "a": {
            "$ref": "#/definitions/size"
          },
          "b": {
            "$ref": "#/definitions/size"
          }
        }
      },
      "bool": true
    }
  },
  "objectEscape": {
    "type": "object",
    "properties": {
      "a~b": {
        "$ref": "#/definitions/Prop"
      }
    },
    "definitions": {
      "Prop": {
        "type": "object",
        "properties": {
          "c/d": {
            "type": "string"
          }
        }
      }
    }
  },
  "pointerResolutionFailure": {
    "type": "object",
    "properties": {
      "rectangle": {
        "$ref": "#/definitions/Rectangle"
      }
    },
    "definitions": {}
  },
  "pointerResolutionQueryFailure": {
    "type": "object",
    "properties": {
      "rectangle": {
        "$ref": "#/definitions/nested/Rectangle"
      }
    },
    "definitions": {}
  },
  "emptySchema": {},
  "multipleTypes": {
    "type": [
      "string",
      "boolean"
    ]
  },
  "multipleTypesWithProps": {
    "type": [
      "number",
      "string"
    ],
    "minLength": 3,
    "minimum": 5
  },
  "invalidType": {
    "type": {}
  },
  "noExplicitObject": {
    "properties": {}
  },
  "anyOfNeverMatches": {
    "type": "string",
    "anyOf": [
      {
        "maxLength": 2
      },
      {
        "minLength": 4
      }
    ]
  },
  "enumSchema": {
    "enum": [
      1,
      2,
      "a",
      {
        "a": "b"
      },
      null
    ]
  },
  "emptyPatternProperties": {
    "patternProperties": {}
  },
  "jsonPointerInArray": {
    "items": [
      {
        "type": "integer"
      },
      {
        "$ref": "#/items/0"
      }
    ]
  },
  "selfRecursiveSchema": {
    "properties": {
      "foo": {
        "$ref": "#"
      }
    }
  },
  "emptySchemaWithDefault": {
    "default": 0
  },
  "genericProperties": {
    "id": "myId",
    "title": "my title",
    "description": "my description"
  },
  "recursiveSchema": {
    "properties": {
      "prop": {
        "$ref": "#/definitions/Prop"
      }
    },
    "definitions": {
      "Prop": {
        "properties": {
          "subprop": {
            "$ref": "#/definitions/Prop"
          }
        }
      }
    }
  },
  "refWithType": {
    "properties": {
      "prop": {
        "type": "object",
        "$ref": "#/definitions/PropDef"
      }
    },
    "definitions": {
      "PropDef": {
        "required": [
          "a",
          "b"
        ]
      }
    }
  },
  "resolutionScopeTest": {
    "id": "http://x.y.z/rootschema.json#",
    "schema1": {
      "id": "#foo"
    },
    "schema2": {
      "id": "otherschema.json",
      "nested": {
        "id": "#bar"
      },
      "alsonested": {
        "id": "t/inner.json#a"
      }
    },
    "schema3": {
      "id": "some://where.else/completely#"
    }
  },
  "remotePointerResolution": {
    "id": "http://example.org/",
    "properties": {
      "prop": {
        "$ref": "asd"
      },
      "idPathChange": {
        "id": "http://example.org/rootschema.json",
        "properties": {
          "prop": {
            "$ref": "otherschema.json"
          }
        }
      },
      "folderChange": {
        "id": "http://example.org/folder/",
        "properties": {
          "schemaInFolder": {
            "$ref": "subschemaInFolder.json"
          }
        }
      }
    }
  },
  "propsAroundRefExtendTheReferredSchema": {
    "definitions": {
      "Object": {
        "type": "object"
      }
    },
    "properties": {
      "prop": {
        "$ref": "#/definitions/Object",
        "minProperties": 1
      }
    }
  },
  "schemaWithId": {
    "id": "http://example.org/schema/",
    "properties": {
      "prop": {
        "$ref": "schema.json"
      }
    }
  },
  "schemaWithIdV6": {
    "$id": "http://example.org/schema/",
    "properties": {
      "prop": {
        "$ref": "schema.json"
      }
    }
  },
  "patternPropsAndSchemaDeps": {
    "type": "object",
    "properties": {
      "1stLevel": {
        "dependencies": {
          "2ndLevel": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
              "2ndL.*l$": {
                "type": "object",
                "properties": {
                  "3rdLev": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "additionalProperties": false
  },
  "constSchema": {
    "const": 2
  },
  "explicitSchemaVersion": {
    "$schema": "http://json-schema.org/draft-06/schema",
    "type": "object"
  },
  "v6Ref": {
    "$id": "http://localhost:1234/tree",
    "description": "tree of nodes",
    "type": "object",
    "properties": {
      "meta": {
        "type": "string"
      },
      "nodes": {
        "type": "array",
        "items": {
          "$ref": "node"
        }
      }
    },
    "required": [
      "meta",
      "nodes"
    ],
    "definitions": {
      "node": {
        "$id": "http://localhost:1234/node",
        "description": "node",
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          },
          "subtree": {
            "$ref": "tree"
          }
        },
        "required": [
          "value"
        ]
      }
    }
  },
  "v6SameDocumentRef": {
    "$id": "http://example.com/path",
    "properties": {
      "shape": {
        "$ref": "#/definitions/Shape"
      }
    },
    "definitions": {
      "Shape": {
        "enum": [
          "rectangle",
          "circle"
        ]
      }
    }
  },
  "folderNameResolution": {
    "$id": "http://localhost/",
    "properties": {
      "$id": "folder/",
      "name": {
        "$ref": "Identifier.json"
      }
    }
  },
  "otherFolderNameResolution": {
    "$id": "http://localhost/",
    "properties": {
      "a": {
        "$id": "folder1/",
        "properties": {
          "b": {
            "$id": "folder2/",
            "properties": {
              "c": {
                "$id": "folder3/",
                "properties": {
                  "d": {
                    "$ref": "Num"
                  }
                }
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Num": {
        "$id": "http://localhost/folder1/folder2/folder3/Num",
        "type": "number",
        "minimum": 0
      }
    }
  },
  "refRemoteV4": {
    "id": "http://localhost:1234/",
    "items": {
      "id": "folder/",
      "items": {
        "$ref": "folderInteger.json"
      }
    }
  },
  "refPointerDerivatedFromPointer": {
    "id": "http://localhost:1234/",
    "properties": {
      "a": {
        "$ref": "#/definitions/Foo"
      }
    },
    "definitions": {
      "id": "folder/",
      "Foo": {
        "$ref": "folderInteger.json"
      },
      "Bar": {
        "description": "dummy schema at #/definitions/Bar"
      },
      "Array": [
        {
          "description": "dummy schema in array"
        }
      ],
      "Escaping": {
        "sla/sh": {
          "description": "slashed",
          "ti~lde": {
            "description": "tiled"
          }
        }
      }
    }
  },
  "relativeIdInReferencedSchemaRoot": {
    "id": "http://localhost:1234/",
    "properties": {
      "a": {
        "$ref": "#/definitions/Foo"
      }
    },
    "definitions": {
      "Foo": {
        "id": "folder/",
        "properties": {
          "a": {
            "$ref": "folderInteger.json"
          }
        }
      }
    }
  },
  "defaultsTest": {
    "type": "object",
    "properties": {
      "numberDefault": {
        "type": "number",
        "default": 10
      },
      "stringDefault": {
        "type": "string",
        "default": "yee"
      },
      "objectDefault": {
        "type": "object",
        "properties": {
          "hello": {
            "type": "string"
          }
        },
        "default": {
          "hello": "world"
        }
      },
      "booleanDefault": {
        "type": "boolean",
        "default": true
      },
      "arrayDefault": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "default": [
          "a",
          "b",
          "c"
        ]
      },
      "nullDefault": {
        "type": "string",
        "default": null
      }
    }
  },
  "nullableSupport": {
    "properties": {
      "nonNullable": {
        "type": "number",
        "nullable": false
      },
      "isNullable": {
        "type": "string",
        "nullable": true
      },
      "implicitNonNullable": {
        "type": "string"
      }
    }
  },
  "unknownType": {
    "type": "object",
    "properties": {
      "prop": {
        "type": "integgggger"
      }
    }
  },
  "unknownMetaSchema": {
    "$schema": "http://json-schema.org/draft-09.75/schema"
  }
}
