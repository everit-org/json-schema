[
  {
    "description": "validation of date-time strings",
    "schema": {
      "format": "date-time"
    },
    "tests": [
      {
        "description": "a valid date-time string",
        "data": "1963-06-19T08:30:06.283185Z",
        "valid": true
      },
      {
        "description": "an invalid date-time string",
        "data": "06/19/1963 08:30:06 PST",
        "valid": false
      },
      {
        "description": "only RFC3339 not all of ISO 8601 are valid",
        "data": "2013-350T01:01:01",
        "valid": false
      }
    ]
  },
  {
    "description": "validation of URIs",
    "schema": {
      "format": "uri"
    },
    "tests": [
      {
        "description": "a valid URI",
        "data": "http://foo.bar/?baz=qux#quux",
        "valid": true
      },
      {
        "description": "an invalid relative URI Reference",
        "data": "/abc",
        "valid": false
      },
      {
        "description": "an invalid URI",
        "data": "\\\\WINDOWS\\fileshare",
        "valid": false
      },
      {
        "description": "an invalid URI though valid URI reference",
        "data": "abc",
        "valid": false
      }
    ]
  },
  {
    "description": "validation of URI References",
    "schema": {
      "format": "uri-reference"
    },
    "tests": [
      {
        "description": "a valid URI",
        "data": "http://foo.bar/?baz=qux#quux",
        "valid": true
      },
      {
        "description": "a valid protocol-relative URI Reference",
        "data": "//foo.bar/?baz=qux#quux",
        "valid": true
      },
      {
        "description": "a valid relative URI Reference",
        "data": "/abc",
        "valid": true
      },
      {
        "description": "an invalid URI Reference",
        "data": "\\\\WINDOWS\\fileshare",
        "valid": false
      },
      {
        "description": "a valid URI Reference",
        "data": "abc",
        "valid": true
      },
      {
        "description": "a valid URI fragment",
        "data": "#fragment",
        "valid": true
      },
      {
        "description": "an invalid URI fragment",
        "data": "#frag\\ment",
        "valid": false
      }
    ]
  },
  {
    "description": "validation of JSON-pointers (JSON String Representation)",
    "schema": {
      "format": "json-pointer"
    },
    "tests": [
      {
        "description": "a valid JSON-pointer",
        "data": "/foo/bar~0/baz~1/%a",
        "valid": true
      },
      {
        "description": "not a valid JSON-pointer (~ not escaped)",
        "data": "/foo/bar~",
        "valid": false
      },
      {
        "description": "valid JSON-pointer with empty segment",
        "data": "/foo//bar",
        "valid": true
      },
      {
        "description": "valid JSON-pointer with the last empty segment",
        "data": "/foo/bar/",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #1",
        "data": "",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #2",
        "data": "/foo",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #3",
        "data": "/foo/0",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #4",
        "data": "/",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #5",
        "data": "/a~1b",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #6",
        "data": "/c%d",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #7",
        "data": "/e^f",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #8",
        "data": "/g|h",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #9",
        "data": "/i\\j",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #10",
        "data": "/k\"l",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #11",
        "data": "/ ",
        "valid": true
      },
      {
        "description": "valid JSON-pointer as stated in RFC 6901 #12",
        "data": "/m~0n",
        "valid": true
      },
      {
        "description": "valid JSON-pointer used adding to the last array position",
        "data": "/foo/-",
        "valid": true
      },
      {
        "description": "valid JSON-pointer (- used as object member name)",
        "data": "/foo/-/bar",
        "valid": true
      },
      {
        "description": "valid JSON-pointer (multiple escaped characters)",
        "data": "/~1~0~0~1~1",
        "valid": true
      },
      {
        "description": "valid JSON-pointer (escaped with fraction part) #1",
        "data": "/~1.1",
        "valid": true
      },
      {
        "description": "valid JSON-pointer (escaped with fraction part) #2",
        "data": "/~0.1",
        "valid": true
      },
      {
        "description": "not a valid JSON-pointer (URI Fragment Identifier) #1",
        "data": "#",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (URI Fragment Identifier) #2",
        "data": "#/",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (URI Fragment Identifier) #3",
        "data": "#a",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (some escaped, but not all) #1",
        "data": "/~0~",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (some escaped, but not all) #2",
        "data": "/~0/~",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (wrong escape character) #1",
        "data": "/~2",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (wrong escape character) #2",
        "data": "/~-1",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (multiple characters not escaped)",
        "data": "/~~",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (isn't empty nor starts with /) #1",
        "data": "a",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (isn't empty nor starts with /) #2",
        "data": "0",
        "valid": false
      },
      {
        "description": "not a valid JSON-pointer (isn't empty nor starts with /) #3",
        "data": "a/a",
        "valid": false
      }
    ]
  }
]
